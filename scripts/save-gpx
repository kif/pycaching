#!/usr/bin/env python
# coding: utf8

import argparse
import pycaching
import time
import os

def parse():
    parser = argparse.ArgumentParser(usage="save-gpx -u user -p pass GC12345", description="Retrieve and save information about a cache in GPX format.", add_help=True)
    parser.add_argument("-u", "--user", type=str, dest='user')
    parser.add_argument("-p", "--password", type=str, dest="password")
    parser.add_argument("geocache", nargs='+')
    return parser.parse_args()


def process(opts):
    linesep = "\r\n"
    geocaching = pycaching.login(opts.user, opts.password)
    caches = []
    for cache_name in opts.geocache:
        if cache_name.endswith(".gpx"):
            cache_name = cache_name[:-4]
        print("Retrieve %s" % cache_name)
        caches.append(geocaching.load_cache(cache_name))
    lat = [i.location.latitude for i in caches]
    lon = [i.location.longitude for i in caches]
    header = ['<?xml version="1.0" encoding="utf-8"?>',
              '<gpx xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" version="1.0" creator="Groundspeak, Inc. All Rights Reserved. http://www.groundspeak.com" xsi:schemaLocation="http://www.topografix.com/GPX/1/0 http://www.topografix.com/GPX/1/0/gpx.xsd http://www.groundspeak.com/cache/1/0/1 http://www.groundspeak.com/cache/1/0/1/cache.xsd" xmlns="http://www.topografix.com/GPX/1/0">',
              '  <name>Cache Listing Generated from Geocaching.com</name>',
              '  <desc>This is an individual cache generated from Geocaching.com</desc>',
              '  <author>Account "%s" From Geocaching.com</author>'%opts.user,
              '  <email>contact@geocaching.com</email>',
              '  <url>http://www.geocaching.com</url>',
              '  <urlname>Geocaching - High Tech Treasure Hunting</urlname>',
              '  <time>%s</time>'%time.strftime("%Y-%m-%dT%H:%M:%S.000Z"),
              '  <keywords>cache, geocache</keywords>',
              '  <bounds minlat="%.6f" minlon="%.6f" maxlat="%.6f" maxlon="%.6f" />'%(min(lat), min(lon), max(lat), max(lon)),
             '</gpx>']
    with open(cache_name + ".gpx", "w") as f:
        for line in header[:-1]:
            f.write(line+linesep)
        for cache in caches:
            for line in cache.to_gpx():
                f.write("  "+line+linesep)
        f.write(header[-1])
    print("Done, saved to %s.gpx"%cache_name)


if __name__=="__main__":
    opts = parse()
    process(opts)
